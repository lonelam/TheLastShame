# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="FFF")
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid, id=2)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|fluid"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Table1*List1(Materials)\" '( 1))(cx-gui-do cx-activate-item \"Materials*Table1*List1(Materials)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions|surface_body (fluid, id=2)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|interior-surface_body (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|interior-surface_body (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|wall (wall, id=5)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
results1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))(cx-gui-do cx-set-integer-entry "Animate*Table1(Playback)*IntegerEntry4(End Frame)" 2)(cx-gui-do cx-activate-item "Animate*Table1(Playback)*IntegerEntry4(End Frame)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table1(Playback)*IntegerEntry4(End Frame)" 100)(cx-gui-do cx-activate-item "Animate*Table1(Playback)*IntegerEntry4(End Frame)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table1(Playback)*IntegerEntry4(End Frame)" 1000)(cx-gui-do cx-activate-item "Animate*Table1(Playback)*IntegerEntry4(End Frame)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table1(Playback)*IntegerEntry3(Increment)" 50)(cx-gui-do cx-activate-item "Animate*Table1(Playback)*IntegerEntry3(Increment)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table4(Key Frames)*IntegerEntry1(Frame)" 2)(cx-gui-do cx-activate-item "Animate*Table4(Key Frames)*IntegerEntry1(Frame)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table4(Key Frames)*IntegerEntry1(Frame)" 1)(cx-gui-do cx-activate-item "Animate*Table4(Key Frames)*IntegerEntry1(Frame)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animate*DropDownList6(Write/Record Format)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*DropDownList6(Write/Record Format)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Animate*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FFF.jpg\") \"Animation Files (*.jpg)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-integer-entry \"Animate*Table4(Key Frames)*IntegerEntry1(Frame)\" 2)(cx-gui-do cx-activate-item \"Animate*Table4(Key Frames)*IntegerEntry1(Frame)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Animate*Table4(Key Frames)*IntegerEntry1(Frame)" 1)(cx-gui-do cx-activate-item "Animate*Table4(Key Frames)*IntegerEntry1(Frame)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*Table4(Key Frames)*Frame2*ButtonBox1*PushButton1(Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*Table4(Key Frames)*Frame2*ButtonBox1*PushButton1(Add)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Animate*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FFF.jpg\") \"Animation Files (*.jpg)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*PanelButtons*PushButton4(Read)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*PushButton7(Picture Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Save Picture*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animate*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Sweep Surface"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*PushButton1(Reports)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*PushButton1(Animation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Animation)*PushButton3(Solution Playback)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Table1(Playback)*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Table1(Playback)*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*PushButton1(Model Specific)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*PushButton1(Animation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
results1.Edit()
results1.SendCommand(Command="""ANIMATION:ANIMATION
QAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
QAnim Save MPEG = Off
QAnim Looping = Bounce
QAnim Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=240""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=1""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=36""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=46""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=56""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=239""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=0""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=58""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=74""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=200""")
results1.SendCommand(Command="""ANIMATION:ANIMATION
Animate Camera = On
Animation Hardcopy Filename = C:/Users/y/Documents/cylinder.wmv
Save Hardcopy = Off
Looping = Loop
Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command="""ANIMATION:ANIMATION
Animate Camera = On
Animation Hardcopy Filename = C:/Users/y/Documents/cylinder.wmv
Save Hardcopy = Off
Looping = Loop
Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Time
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 50
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 50
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.mp4
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = mp4
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 50
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.mp4
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = mp4
END
>animate timestepAnimate""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-3-00250.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 50
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.mp4
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = mp4
END
>load timestep=250""")
results1.Exit()
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Refresh()
solution1.Edit()
solutionComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Automatic Export*Table1*Table7*Table1*TextEntry1(File Name)" "D:/MlCode/cylinder/time_export_u80.txt")(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-use-window-id 1)(cx-use-window-id 1)')
results1.Edit()
results1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
results1.Edit()
results1.SendCommand(Command="""ANIMATION:ANIMATION
QAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
QAnim Save MPEG = Off
QAnim Looping = Bounce
QAnim Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=0""")
results1.SendCommand(Command="""ANIMATION:ANIMATION
Animate Camera = On
Animation Hardcopy Filename = C:/Users/y/Documents/cylinder.wmv
Save Hardcopy = Off
Looping = Loop
Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command="""ANIMATION:ANIMATION
Animate Camera = On
Animation Hardcopy Filename = C:/Users/y/Documents/cylinder.wmv
Save Hardcopy = Off
Looping = Loop
Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Time Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 1
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:pressure, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/STREAMLINE:Streamline 1, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VECTOR:Vector 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VECTOR:Vector 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=122""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-4-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=0""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VECTOR:Vector 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/VECTOR:Vector 1, view=VIEW:View 1")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Vertex
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 100
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Vertex
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 100
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Equally Spaced
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 1000
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Equally Spaced
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 10000
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="> autolegend plot=/VECTOR:Vector 1, view=VIEW:View 1")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Rainbow
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Equally Spaced
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 10000
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Rainbow 6
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = symmetry 1
Locator Sampling Method = Equally Spaced
Max = 0.0 [m s^-1]
Maximum Number of Items = 1000
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 10000
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder_u80_vector.wmv
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = wmv
END""")
results1.SendCommand(Command="""DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = Specified Timestep Interval
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Time Interval = 10 [s]
TimeAnim Timestep Interval = 10
TimeAnim End Timestep = 1000
TimeAnim Start Timestep = 0
TimeAnim Specify Range = On
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder_u80_vector.wmv
TimeAnim Save MPEG = On
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>animate timestepAnimate""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VECTOR:Vector 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
results1.Exit()
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Species (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|inlet (velocity-inlet, id=6)\"))(cx-gui-do cx-set-real-entry-list \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table8*RealEntry2(Velocity Magnitude)\" '( 100))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|interior-surface_body (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|inlet (velocity-inlet, id=6)\"))(cx-gui-do cx-set-real-entry-list \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table8*RealEntry2(Velocity Magnitude)\" '( 10))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Automatic Export*Table1*Table7*Table1*TextEntry1(File Name)" "D:/MlCode/cylinder/time_export_u10.txt")(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
results1.Edit()
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:pressure, view=/VIEW:View 1""")
results1.Exit()
results1.Edit()
solution1.Edit()
results1.Exit()
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=16))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|cylinder (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-use-window-id 1)(cx-use-window-id 1)(dolly-camera -1.05246 -0.691663 0)(cx-use-window-id 1)(dolly-camera 4.5489 0.611753 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|inlet (velocity-inlet, id=6)\"))(cx-gui-do cx-set-real-entry-list \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table8*RealEntry2(Velocity Magnitude)\" '( 1000))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-set-text-entry "Automatic Export*Table1*Table7*Table1*TextEntry1(File Name)" "D:/MlCode/cylinder/exports/time_export_u1000.txt")(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
ClearMessages()
results1.Edit()
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:pressure, view=/VIEW:View 1""")
results1.SendCommand(Command="""ANIMATION:ANIMATION
QAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
QAnim Save MPEG = Off
QAnim Looping = Bounce
QAnim Looping Cycles = 1
Video Format = wmv

END""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=0""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=173""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=408""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=602""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=796""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=939""")
results1.SendCommand(Command=r"""DATA READER:
  Active Case Name = Case cylinder
  Current Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
  Master Results File = D:\MlCode\cylinder\cylinder_gen_files\dp0\FFF\Fluent\FFF.1-8-01000.dat.gz
END
DATA READER:
Timestep Match Criterion = Same Step
Timestep Sync Mode = By Time Value
Timevalue Match Criterion = Same Value
END
ANIMATION: ANIMATION
TimeAnim Control Case = Case cylinder
TimeAnim Control Variable = Timestep
TimeAnim Frame Interval = All Timesteps
TimeAnim Frame Spacing = Equal In Time
TimeAnim Number Of Frames = 21
TimeAnim Timestep Interval = 1
TimeAnim Specify Range = Off
TimeAnim MPEG Filename = C:/Users/y/Documents/cylinder.wmv
TimeAnim Save MPEG = Off
TimeAnim Looping Cycles = 1
Video Format = wmv
END
>load timestep=1000""")
results1.Exit()
